import React from 'react'
import PropTypes from 'prop-types'
import {InvoiceList} from "./InvoiceList";
import {connect} from "react-redux";
import {fetchInvoices, regenerateInvoice, changeInvoiceState} from "../../actions/invoice";
import {Card, CardHeader, CardText, DatePicker, Divider, MenuItem, RaisedButton, SelectField} from "material-ui";
import FilterIcon from 'material-ui/svg-icons/content/filter-list';
import CloseExpandIcon from 'material-ui/svg-icons/hardware/keyboard-arrow-up';
import '../../index.css';

let states = ['ALL', 'OPEN', 'PAID', 'CLOSED', 'LATE', 'ENDING'];
let generatedBy = ['ALL', 'AUTO', 'MANUAL']

export default class InvoiceListFilter extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            startDate: new Date(1514822165000),
            endDate: new Date(1546358165000),
            stateValue: 1,
            generatedBy: 1,
            invoices: []
        };

        this.handleStartDateChange = (event, date) => {
            this.setState({
                startDate: date
            })
            this.filterInvoices()
        };
        this.handleEndDateChange = (event, date) => {
            this.setState({
                endDate: date
            })
            this.filterInvoices()
        };
        this.handleInvoiceStateChange = (event, index, value) => {
            this.setState({
                stateValue: value
            })
            this.filterInvoices()
        };

        this.handleInvoiceGenerationChange = (event,index,value) => {
            this.setState({
                generatedBy: value
            })
            this.filterInvoices()
        };
        this.filterInvoices = () => {
            let invoices = this.props.invoices.filter(invoice => invoice.startDate >= this.state.startDate)
                .filter(invoice => invoice.endDate <= this.state.endDate)

            this.setState({
                invoices: invoices
            })
        };
    }

    componentDidMount(){
        this.setState({
            invoices: this.props.invoices
        })
    }

    render() {
        return (
            <div className="listBody">
                <Card>
                    <CardHeader actAsExpander showExpandableButton closeIcon={<FilterIcon/>} openIcon={<CloseExpandIcon/>} title={'FILTER OPTIONS'} />
                    <Divider />
                    <CardText expandable>
                        <table>
                            <tbody>
                            <tr>
                                <td><h4 className="filterHeader">CREATION DATE</h4></td>
                            </tr>
                            <tr>
                                <td>
                                    <DatePicker
                                        className="datePicker"
                                        floatingLabelText="Start"
                                        okLabel="OK"
                                        cancelLabel="Annuleren"
                                        onChange={this.handleStartDateChange}
                                        value={this.state.startDate}
                                    />
                                </td><td>
                                    <DatePicker
                                        className="datePicker"
                                        floatingLabelText="End"
                                        okLabel="OK"
                                        cancelLabel="Annuleren"
                                        onChange={this.handleEndDateChange}
                                        value={this.state.endDate}
                                    />
                                </td>
                            </tr>
                            <tr>
                                <td><h4 className="filterHeader">INVOICE STATE</h4></td><td><h4 className="filterHeader">GENERATED BY</h4></td>
                            </tr>
                            <tr>
                                <td>
                                <SelectField
                                    value={this.state.stateValue}
                                    onChange={this.handleInvoiceStateChange}>
                                    <MenuItem value={1} primaryText="ALL" />
                                    <MenuItem value={2} primaryText="OPEN" />
                                    <MenuItem value={3} primaryText="PAID" />
                                    <MenuItem value={4} primaryText="CLOSED" />
                                    <MenuItem value={5} primaryText="LATE" />
                                    <MenuItem value={6} primaryText="ENDING" />
                                </SelectField>
                                </td>
                                <td>
                                    <SelectField
                                        value={this.state.generatedBy}
                                        onChange={this.handleInvoiceGenerationChange}>
                                        <MenuItem value={1} primaryText="ALL" />
                                        <MenuItem value={2} primaryText="AUTO" />
                                        <MenuItem value={3} primaryText="MANUAL" />
                                    </SelectField>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </CardText>
                </Card>

                {this.props.isFetching ? <p>Loading...</p>: <p></p>}
                {this.props.isFailed ? <p>Failed loading invoices!</p> : <p></p>}
                <InvoiceList
                    invoices={this.state.invoices}
                />
            </div>
        )
    }
}

InvoiceListFilter.propTypes = {
    invoices: PropTypes.array,
};